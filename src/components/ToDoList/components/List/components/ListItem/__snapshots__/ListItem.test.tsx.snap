// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component ListItem renders list item where isComplete=false 1`] = `
.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: 10px auto;
  border-bottom: 1px solid #ddd;
  padding: 0 0 10px;
}

.emotion-0 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.emotion-1 {
  -webkit-text-decoration: none;
  text-decoration: none;
  background: none;
  white-space: nowrap;
  -webkit-appearance: none;
  box-sizing: border-box;
  text-align: center;
  -webkit-font-smoothing: antialiased;
  border: none;
  text-rendering: optimizeLegibility;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
  cursor: pointer;
  box-shadow: none;
  font-weight: 500;
  position: relative;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  border-radius: 0.25rem;
  font-size: 0.875rem;
  padding: 0 0.8rem;
  height: 30px;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  background-color: white;
  color: #212529;
  background: linear-gradient(to top,#f1f3f5,white);
  box-shadow: inset 0 0 0 1px hsla(210,10.8%,14.5%,0.2),inset 0 -1px 1px 0 hsla(210,10.8%,14.5%,0.1);
  padding: 0;
  width: 30px;
}

.emotion-1:focus {
  outline: 3px auto hsla(208.79999999999995,77.2%,42.9%,0.8);
}

.emotion-1:focus:not([data-focus-visible-added]) {
  outline: none;
}

.emotion-1[aria-expanded="true"] {
  background: none;
  background-color: #f1f3f5;
  box-shadow: inset 0 0 0 1px hsla(210,10.8%,14.5%,0.3),inset 0 -1px 1px 0 hsla(210,10.8%,14.5%,0.15);
}

<div
  className="emotion-3"
>
  <label
    className="emotion-0"
  >
    <input
      checked={false}
      name="checkbox_1"
      onChange={[Function]}
      type="checkbox"
    />
    Сделать ДЗ
  </label>
  <div
    className="Button Touchable emotion-1"
    id="editListItem_1"
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseDownCapture={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchMoveCapture={[Function]}
    onTouchStart={[Function]}
    onTouchStartCapture={[Function]}
    role="button"
    tabIndex={0}
    type="button"
  >
    <div
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "width": "1px",
        }
      }
    >
      editListItem
    </div>
    <svg
      aria-hidden={true}
      fill="none"
      height="16px"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="2"
      style={
        Object {
          "display": "block",
        }
      }
      viewBox="0 0 24 24"
      width="16px"
    >
      <path
        d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"
      />
      <path
        d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"
      />
    </svg>
  </div>
  <div
    className="Button Touchable emotion-1"
    id="deleteListItem_1"
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseDownCapture={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchMoveCapture={[Function]}
    onTouchStart={[Function]}
    onTouchStartCapture={[Function]}
    role="button"
    tabIndex={0}
    type="button"
  >
    <div
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "width": "1px",
        }
      }
    >
      deleteListItem
    </div>
    <svg
      aria-hidden={true}
      fill="none"
      height="16px"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="2"
      style={
        Object {
          "display": "block",
        }
      }
      viewBox="0 0 24 24"
      width="16px"
    >
      <polyline
        points="3 6 5 6 21 6"
      />
      <path
        d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"
      />
      <line
        x1="10"
        x2="10"
        y1="11"
        y2="17"
      />
      <line
        x1="14"
        x2="14"
        y1="11"
        y2="17"
      />
    </svg>
  </div>
</div>
`;

exports[`Component ListItem renders list item where isComplete=true 1`] = `
.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: 10px auto;
  border-bottom: 1px solid #ddd;
  padding: 0 0 10px;
}

.emotion-0 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.emotion-1 {
  -webkit-text-decoration: none;
  text-decoration: none;
  background: none;
  white-space: nowrap;
  -webkit-appearance: none;
  box-sizing: border-box;
  text-align: center;
  -webkit-font-smoothing: antialiased;
  border: none;
  text-rendering: optimizeLegibility;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
  cursor: pointer;
  box-shadow: none;
  font-weight: 500;
  position: relative;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  border-radius: 0.25rem;
  font-size: 0.875rem;
  padding: 0 0.8rem;
  height: 30px;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  background-color: white;
  color: #212529;
  background: linear-gradient(to top,#f1f3f5,white);
  box-shadow: inset 0 0 0 1px hsla(210,10.8%,14.5%,0.2),inset 0 -1px 1px 0 hsla(210,10.8%,14.5%,0.1);
  padding: 0;
  width: 30px;
}

.emotion-1:focus {
  outline: 3px auto hsla(208.79999999999995,77.2%,42.9%,0.8);
}

.emotion-1:focus:not([data-focus-visible-added]) {
  outline: none;
}

.emotion-1[aria-expanded="true"] {
  background: none;
  background-color: #f1f3f5;
  box-shadow: inset 0 0 0 1px hsla(210,10.8%,14.5%,0.3),inset 0 -1px 1px 0 hsla(210,10.8%,14.5%,0.15);
}

<div
  className="emotion-3"
>
  <label
    className="emotion-0"
  >
    <input
      checked={true}
      name="checkbox_0"
      onChange={[Function]}
      type="checkbox"
    />
    Полить цветы
  </label>
  <div
    className="Button Touchable emotion-1"
    id="editListItem_0"
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseDownCapture={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchMoveCapture={[Function]}
    onTouchStart={[Function]}
    onTouchStartCapture={[Function]}
    role="button"
    tabIndex={0}
    type="button"
  >
    <div
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "width": "1px",
        }
      }
    >
      editListItem
    </div>
    <svg
      aria-hidden={true}
      fill="none"
      height="16px"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="2"
      style={
        Object {
          "display": "block",
        }
      }
      viewBox="0 0 24 24"
      width="16px"
    >
      <path
        d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"
      />
      <path
        d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"
      />
    </svg>
  </div>
  <div
    className="Button Touchable emotion-1"
    id="deleteListItem_0"
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseDownCapture={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchMoveCapture={[Function]}
    onTouchStart={[Function]}
    onTouchStartCapture={[Function]}
    role="button"
    tabIndex={0}
    type="button"
  >
    <div
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "width": "1px",
        }
      }
    >
      deleteListItem
    </div>
    <svg
      aria-hidden={true}
      fill="none"
      height="16px"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="2"
      style={
        Object {
          "display": "block",
        }
      }
      viewBox="0 0 24 24"
      width="16px"
    >
      <polyline
        points="3 6 5 6 21 6"
      />
      <path
        d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"
      />
      <line
        x1="10"
        x2="10"
        y1="11"
        y2="17"
      />
      <line
        x1="14"
        x2="14"
        y1="11"
        y2="17"
      />
    </svg>
  </div>
</div>
`;
